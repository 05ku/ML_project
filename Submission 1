import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

from sklearn.linear_model import LinearRegression 
from sklearn.linear_model import LogisticRegression

col = ['geo',2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021]

data = pd.read_table('sdg_02_40_tabular.tsv', names = col, skiprows = 1, na_values = ':')
countries = [row.split(",")[-1] for row in data['geo']]
data['geo'] = countries
def remove_letters(c):
    if 'e' in str(c):
        return str(c).replace(' e', '')
    elif 'p' in str(c):
        return str(c).replace(' p', '')
    elif 'r' in str(c):
        return str(c).replace(' r', '')
    else:
        return str(c)
    
data= data.applymap(remove_letters)
data.set_index('geo', inplace = True)
data = data.T
data = data.drop([2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010])
data = data.drop(['AL', 'TR', 'EU27_2020', 'EU28', 'IS', 'ME'], axis = 1)
data.head(5)


#Plotting data from 2012 to 2021, each country with its own plot
fig, axi = plt.subplots(nrows=11, ncols=3,figsize=(25, 15))
axi = axi.ravel()

for i, country in enumerate(data.columns):
    values = data[country].dropna()
    years = data.index[:len(values)]
    ax = axi[i]
    ax.plot(years, values)
    ax.set_title(country)


#Plotting data from 2012 to 2021, all countries in a same plot
for country in data.columns:
    values = data[country].dropna()
    years = data.index[:len(values)]
    plt.plot(years, values, label=country)
